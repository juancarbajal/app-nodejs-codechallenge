version: '3.8'
services:
  main:
    container_name: main
    build:
      context: app_main
      dockerfile: Dockerfile.dev
    ports:
      - "80:3000"
    restart: always
    environment:
      PORT: 3000
      APP_NAME: "app_main"
      KAFKA_BROKER: kafka:9092
    depends_on: [kafka]
    volumes:
      - ./app_main:/usr/src/app
      - /usr/src/app/node_modules
  antifraud:
    container_name: antifraud
    build:
      context: app_antifraud
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      # PORT: 3100
      APP_NAME: "app_antifraud"
      KAFKA_BROKER: kafka:9092
    depends_on: [kafka]
    volumes:
      - ./app_antifraud:/usr/src/app
      - /usr/src/app/node_modules

  db:
    container_name: db
    build:
      context: app_db
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      # PORT: 3200
      APP_NAME: "app_db"
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis 
    depends_on: [kafka, redis]
    volumes:
      - ./app_db:/usr/src/app
      - /usr/src/app/node_modules

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ins-trans:1:1,upd-trans:1:1" 
    volumes:
      - ./kafka/docker.sock:/var/run/docker.sock
  
  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - ./redis:/data

volumes:
  redis:
    driver: local
  kafka:
    driver: local
